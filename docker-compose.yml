version: '3.8'

services:
  kafka:
    image: confluentinc/cp-kafka:7.6.0
    container_name: kafka
    environment:
      KAFKA_KRAFT_BROKER_ID: 1
      KAFKA_NODE_ID: 1
      KAFKA_LISTENERS: PLAINTEXT://kafka:9092,CONTROLLER://kafka:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_NUM_PARTITIONS: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      CLUSTER_ID: "abcdefghijklmnopqrstuv"
    volumes:
      - kafka-data:/var/lib/kafka/data
    ports:
      - "9092:9092"

  schema-registry:
    image: confluentinc/cp-schema-registry:7.6.0
    container_name: schema-registry
    depends_on:
      kafka:
        condition: service_started
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9092
    ports:
      - "8081:8081"

  postgres:
    image: postgres:17
    container_name: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: notifications
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d notifications" ]
      interval: 5s
      timeout: 30s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5433:5432"

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8080:8080"
    depends_on:
      kafka:
        condition: service_started
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schema-registry:8081

  kafka-rest-proxy:
    image: confluentinc/cp-kafka-rest:7.6.0
    ports:
      - "8082:8082"
    environment:
      KAFKA_REST_HOST_NAME: kafka-rest-proxy
      KAFKA_REST_LISTENERS: http://0.0.0.0:8082
      KAFKA_REST_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      KAFKA_REST_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9092
    depends_on:
      kafka:
        condition: service_started



  notifications-api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8380:8380"
    depends_on:
      kafka:
        condition: service_started
      postgres:
        condition: service_started
      schema-registry:
        condition: service_started

  smtp:
    image: axllent/mailpit
    ports:
      - "1025:1025"     # SMTP
      - "8025:8025"     # Web UI

volumes:
  pgdata:
  kafka-data: