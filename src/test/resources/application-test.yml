spring:
  application:
    name: notifications_api
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  datasource:
    url: jdbc:postgresql:///notifications?TC_IMAGE_TAG=17-alpine
    username: postgres
    password: root
  flyway:
    url: jdbc:postgresql:///notifications?TC_IMAGE_TAG=17-alpine
    locations: classpath:db/test-migration
    user: ${spring.datasource.username}
    password: ${spring.datasource.password}
  kafka:
    consumer:
      group-id: notification-consumer
      auto-offset-reset: earliest
      key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        specific.avro.reader: false
        spring.deserializer.value.delegate.class: io.confluent.kafka.serializers.KafkaAvroDeserializer
        spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer

logging:
  level:
    org.springframework.web: INFO