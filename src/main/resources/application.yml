server:
  port: 8380

spring:
  application:
    name: notifications_api
  config:
    import: classpath:custom.properties
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  datasource:
    url: jdbc:postgresql://postgres:5432/notifications
    #url: jdbc:postgresql://localhost:5432/notifications
    username: user
    # username: postgres
    # password: root
    password: password
  flyway:
    url: jdbc:postgresql://postgres:5432/notifications
    #url: jdbc:postgresql://localhost:5432/notifications
    locations: classpath:db/migration
    user: ${spring.datasource.username}
    password: ${spring.datasource.password}
  kafka:
    bootstrap-servers: kafka:9092
    consumer:
      group-id: notification-consumer
      auto-offset-reset: earliest
      key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        schema.registry.url: http://schema-registry:8081
        specific.avro.reader: false
        spring.deserializer.value.delegate.class: io.confluent.kafka.serializers.KafkaAvroDeserializer
        spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
  mail:
    host: smtp
    port: 1025
    username:
    password:
    properties:
      mail:
        smtp:
          auth: false
logging:
  level:
    org.springframework.web: INFO






